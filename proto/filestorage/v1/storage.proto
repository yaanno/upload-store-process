syntax = "proto3";

package filestorage.v1;

import "shared/v1/shared.proto";

option go_package = "github.com/yaanno/upload-store-process/gen/go/filestorage/v1";

// FileStorageService manages file storage and retrieval
service FileStorageService {

  // Retrieve file metadata
  rpc GetFileMetadata(GetFileMetadataRequest) returns (GetFileMetadataResponse) {}

  // List files with pagination
  rpc ListFiles(ListFilesRequest) returns (ListFilesResponse) {}

  // Delete a file
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse) {}

  // Prepare storage for a new file upload
  rpc PrepareUpload(PrepareUploadRequest) returns (PrepareUploadResponse) {}
}

// Request to retrieve file metadata
message GetFileMetadataRequest {
  string file_id = 1;
  string jwt_token = 2;
}

// Response with file metadata
message GetFileMetadataResponse {
  shared.v1.Response base_response = 1;
  shared.v1.FileMetadata metadata = 2;
}

// Request to list files
message ListFilesRequest {
  int32 page = 1;
  int32 page_size = 2;
  string user_id = 3;
  string file_type = 4;
  string jwt_token = 5;
}

// Response with file list
message ListFilesResponse {
  shared.v1.Response base_response = 1;
  repeated shared.v1.FileMetadata files = 2;
  int32 total_files = 3;
  int32 total_pages = 4;
}

// Request to delete a file
message DeleteFileRequest {
  string file_id = 1;
  string jwt_token = 2;
}

// Response after file deletion
message DeleteFileResponse {
  shared.v1.Response base_response = 1;
  bool file_deleted = 2;
}

// Request to prepare file storage
message PrepareUploadRequest {
  string global_upload_id = 1;
  string filename = 2;
  int64 file_size_bytes = 3;
  string jwt_token = 4;
}

// Response with upload storage details
message PrepareUploadResponse {
  shared.v1.Response base_response = 1;
  string storage_path = 2;
  string storage_upload_token = 3;
  int64 expiration_time = 4;
}
