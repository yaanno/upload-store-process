syntax = "proto3";

package fileupload.v1;

import "shared/v1/shared.proto";

option go_package = "github.com/yaanno/upload-store-process/gen/go/fileupload/v1";

// FileUploadService defines methods for file upload management
service FileUploadService {
  // Initiate file upload process
  rpc PrepareUpload(PrepareUploadRequest) returns (PrepareUploadResponse) {}

  // Cancel an ongoing upload
  rpc CancelUpload(CancelUploadRequest) returns (CancelUploadResponse) {}

  // New methods to proxy storage service operations
  rpc GetFileMetadata(GetFileMetadataRequest) returns (GetFileMetadataResponse) {}
  rpc ListFiles(ListFilesRequest) returns (ListFilesResponse) {}
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse) {}
}

// Request to initiate file upload
message PrepareUploadRequest {
  string filename = 1;
  int64 file_size_bytes = 2;
  string file_type = 3;  // CSV, JSON, TXT, etc.
  string jwt_token = 4;  // Added JWT token for authentication
}

// Response with upload details
message PrepareUploadResponse {
  shared.v1.Response base_response = 1;
  string global_upload_id = 2;        // Renamed from upload_id
  string storage_path = 3;            // Renamed from storage_endpoint
  string storage_upload_token = 4;    // New token field
  int64 expiration_time = 5;          // Existing expiration field
}

// Request to cancel an upload
message CancelUploadRequest {
  string global_upload_id = 1;
  string reason = 2; // Optional cancellation reason
}

// Response for upload cancellation
message CancelUploadResponse {
  shared.v1.Response base_response = 1;
  bool upload_cancelled = 2;
}

// Request to retrieve file metadata
message GetFileMetadataRequest {
  string file_id = 1;
  string jwt_token = 2;  // Add authentication
}

// Response with file metadata
message GetFileMetadataResponse {
  shared.v1.Response base_response = 1;
  shared.v1.FileMetadata metadata = 2;
}

// Request to list files
message ListFilesRequest {
  int32 page = 1;
  int32 page_size = 2;
  string jwt_token = 3;  // Authentication
}

// Response with file list
message ListFilesResponse {
  shared.v1.Response base_response = 1;
  repeated shared.v1.FileMetadata files = 2;
  int32 total_files = 3;
  int32 total_pages = 4;
}

// Request to delete a file
message DeleteFileRequest {
  string file_id = 1;
  string jwt_token = 2;  // Authentication
}

// Response after file deletion
message DeleteFileResponse {
  shared.v1.Response base_response = 1;
  bool file_deleted = 2;
}